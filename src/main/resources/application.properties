spring.datasource.url=jdbc:mysql://192.168.0.116:3306/plants?zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.database = MYSQL

# To avoid communications link failure
spring.datasource.testWhileIdle = true
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.validationQuery = SELECT 1

#serial.port=COM3
serial.port=/dev/ttyACM0
server.port=8111

gif.directory=$PLANTS_HOME/gifs
#gif.directory=C:\\gifs

graphs.daysToShow=5

notification.text=FAKE_NUMBER

####################################################SQL##############################################
sql.retrieveSensors= \
select s.id,s.name as type,sm.name as name,sm.arduino_pin,sm.is_analog from sensors s, sensor_mapping sm \
where s.id = sm.sensor_id \
order by 1;

sql.retrieveSensorData= \
select sensor_id,value,as_of_date \
from sensor_data \
where sensor_id = ? \
order by as_of_date;

sql.retrieveRecentSensorData= \
select sensor_id,value,as_of_date \
from sensor_data \
where sensor_id = %d \
and as_of_date >= '%s' \
and as_of_date <= '%s' \
order by as_of_date;

sql.retrieveLatestSensorData= \
select sensor_id,value,as_of_date \
from sensor_data \
where sensor_id = %d \
order by as_of_date desc \
limit 1;

sql.retrieveSensorThreshold= \
select threshold from sensor_thresholds \
where sensor_id = ?;

sql.retrieveSensorLastNotified= \
select last_notified from sensor_thresholds \
where sensor_id = ?;

sql.writeSensorData= \
insert into sensor_data (sensor_id,value) values (?,?);

sql.markNotified= \
update sensor_thresholds \
set last_notified = now() \
where sensor_id = ?;